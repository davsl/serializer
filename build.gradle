//PLUGINS DEPENDENCY
buildscript {
    dependencies {
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.17"
    }
}
//PLUGINS
plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.30'
    id "com.jfrog.bintray" version "1.8.4"
    id 'maven-publish'
}
//REPOSITORIES and DEPENDENCIES
repositories {
    mavenCentral()
    jcenter()
}
dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.json:json:20180813"
}
//JVM TARGET
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
//JES INFO
def VERSION = '3.2.3'
def ART_ID = 'serializer'
//PACKAGE INFO
group 'sliep.jes'
version VERSION
sourceCompatibility = 1.8
//CREATE PACKAGE INFO KOTLIN FILE
def packageInfo = """package ${project.group}.$ART_ID

private object PackageInfo {
    const val ID = "$ART_ID"
    const val GROUP = "$project.group"
    const val VERSION = "$project.version"
}
"""
task generateSources {
    inputs.property "version", project.version
    outputs.dir "$buildDir/generated"
    doFirst {
        def packagePath = "${project.group}.$ART_ID".replace('.', '/')
        def versionFile = file("$buildDir/generated/$packagePath/PackageInfo.kt")
        versionFile.parentFile.mkdirs()
        versionFile.text = packageInfo
    }
}
compileKotlin.dependsOn generateSources
sourceSets.main.java {
    srcDir "$buildDir/generated"
}
//PUBLICATION
task sourcesJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}
artifacts {
    archives sourcesJar
    archives javadocJar
}
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "sliep"
            name "Sliep"
            email "dade.sliep@gmail.com"
        }
    }
    scm {
        url "https://github.com/davsl/" + ART_ID
    }
}
publishing {
    publications {
        toJCenter(MavenPublication) {
            from components.java
            groupId = 'sliep.jes'
            artifactId = ART_ID
            version = VERSION
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'An AWESOME lib Really')
                root.appendNode('name', ART_ID)
                root.appendNode('url', 'https://github.com/davsl/' + ART_ID)
                root.children().last() + pomConfig
            }
        }
    }
}
bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['toJCenter']
    pkg {
        repo = 'jes'
        name = ART_ID
        userOrg = 'sliep'
        desc = 'Amazing serialization/deserialization library details on https://davsl.github.io/' + ART_ID + '/'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://davsl.github.io/' + ART_ID + '/'
        issueTrackerUrl = 'https://github.com/davsl/' + ART_ID + '/issues'
        vcsUrl = 'https://github.com/davsl/' + ART_ID + '.git'
        labels = ['beta', 'developing']
        publicDownloadNumbers = true
        version {
            name = VERSION
            desc = 'Added fix'
            released = new Date()
        }
    }
}
//JAVADOC
apply plugin: 'org.jetbrains.dokka'
dokka {
    moduleName = 'serializer'
    includeNonPublic = false
    skipDeprecated = false
    skipEmptyPackages = true
    outputFormat = 'html'
    outputDirectory = "$projectDir/docs"
}