$dokka.format:html
$dokka.linkExtension:html
$dokka.location:sliep.jes.serializer$CONSTANTS#java.lang.Class((kotlin.Any))sliep.jes.serializer/java.lang.-class/-c-o-n-s-t-a-n-t-s.html
$dokka.location:sliep.jes.serializer$callGetter(kotlin.Any, kotlin.String)sliep.jes.serializer/kotlin.-any/call-getter.html
$dokka.location:sliep.jes.serializer$callSetter(kotlin.Any, kotlin.String, kotlin.Any)sliep.jes.serializer/kotlin.-any/call-setter.html
$dokka.location:sliep.jes.serializer$constructor(java.lang.Class((sliep.jes.serializer.constructor.T)), kotlin.Array((java.lang.Class((kotlin.Any)))))sliep.jes.serializer/java.lang.-class/constructor.html
$dokka.location:sliep.jes.serializer$constructors(java.lang.Class((sliep.jes.serializer.constructors.T)), kotlin.Int, kotlin.Int)sliep.jes.serializer/java.lang.-class/constructors.html
$dokka.location:sliep.jes.serializer$dimensions#java.lang.Class((kotlin.Any))sliep.jes.serializer/java.lang.-class/dimensions.html
$dokka.location:sliep.jes.serializer$dimensions#kotlin.reflect.KClass((kotlin.Any))sliep.jes.serializer/kotlin.reflect.-k-class/dimensions.html
$dokka.location:sliep.jes.serializer$field(java.lang.Class((kotlin.Any)), kotlin.String, kotlin.Boolean)sliep.jes.serializer/java.lang.-class/field.html
$dokka.location:sliep.jes.serializer$fields(java.lang.Class((kotlin.Any)), kotlin.Int, kotlin.Int)sliep.jes.serializer/java.lang.-class/fields.html
$dokka.location:sliep.jes.serializer$fromJson(org.json.JSONArray, java.lang.Class((sliep.jes.serializer.fromJson.T)), kotlin.Array((sliep.jes.serializer.fromJson.T)))sliep.jes.serializer/org.json.-j-s-o-n-array/from-json.html
$dokka.location:sliep.jes.serializer$fromJson(org.json.JSONArray, kotlin.Array((sliep.jes.serializer.fromJson.T)))sliep.jes.serializer/org.json.-j-s-o-n-array/from-json.html
$dokka.location:sliep.jes.serializer$fromJson(org.json.JSONObject, java.lang.Class((sliep.jes.serializer.fromJson.T)), sliep.jes.serializer.fromJson.T)sliep.jes.serializer/org.json.-j-s-o-n-object/from-json.html
$dokka.location:sliep.jes.serializer$fromJson(org.json.JSONObject, sliep.jes.serializer.fromJson.T)sliep.jes.serializer/org.json.-j-s-o-n-object/from-json.html
$dokka.location:sliep.jes.serializer$getField(kotlin.Any, kotlin.String, kotlin.Boolean)sliep.jes.serializer/kotlin.-any/get-field.html
$dokka.location:sliep.jes.serializer$implement(java.lang.Class((sliep.jes.serializer.implement.T)), java.lang.reflect.InvocationHandler)sliep.jes.serializer/java.lang.-class/implement.html
$dokka.location:sliep.jes.serializer$invokeMethod(kotlin.Any, kotlin.String, kotlin.Array((kotlin.Any)))sliep.jes.serializer/kotlin.-any/invoke-method.html
$dokka.location:sliep.jes.serializer$isFinal#java.lang.reflect.Fieldsliep.jes.serializer/java.lang.reflect.-field/is-final.html
$dokka.location:sliep.jes.serializer$isGetter#java.lang.reflect.Methodsliep.jes.serializer/java.lang.reflect.-method/is-getter.html
$dokka.location:sliep.jes.serializer$isSetter#java.lang.reflect.Methodsliep.jes.serializer/java.lang.reflect.-method/is-setter.html
$dokka.location:sliep.jes.serializer$isTypePrimitive#kotlin.reflect.KClass((kotlin.Any))sliep.jes.serializer/kotlin.reflect.-k-class/is-type-primitive.html
$dokka.location:sliep.jes.serializer$method(java.lang.Class((kotlin.Any)), kotlin.String, kotlin.Array((java.lang.Class((kotlin.Any)))), kotlin.Boolean)sliep.jes.serializer/java.lang.-class/method.html
$dokka.location:sliep.jes.serializer$methods(java.lang.Class((kotlin.Any)), kotlin.Int, kotlin.Int)sliep.jes.serializer/java.lang.-class/methods.html
$dokka.location:sliep.jes.serializer$newArrayInstance(java.lang.Class((sliep.jes.serializer.newArrayInstance.T)), kotlin.Int)sliep.jes.serializer/java.lang.-class/new-array-instance.html
$dokka.location:sliep.jes.serializer$newInstance(java.lang.Class((sliep.jes.serializer.newInstance.T)), kotlin.Array((kotlin.Any)))sliep.jes.serializer/java.lang.-class/new-instance.html
$dokka.location:sliep.jes.serializer$newUnsafeInstance(java.lang.Class((sliep.jes.serializer.newUnsafeInstance.T)))sliep.jes.serializer/java.lang.-class/new-unsafe-instance.html
$dokka.location:sliep.jes.serializer$propName#java.lang.reflect.Methodsliep.jes.serializer/java.lang.reflect.-method/prop-name.html
$dokka.location:sliep.jes.serializer$setField(kotlin.Any, kotlin.String, kotlin.Any, kotlin.Boolean)sliep.jes.serializer/kotlin.-any/set-field.html
$dokka.location:sliep.jes.serializer$signature#java.lang.reflect.Executablesliep.jes.serializer/java.lang.reflect.-executable/signature.html
$dokka.location:sliep.jes.serializer$thisToString(kotlin.Any, kotlin.Function1((kotlin.Any, kotlin.String)), kotlin.Function1((kotlin.Array((kotlin.Any)), kotlin.String)), kotlin.String, kotlin.String)sliep.jes.serializer/kotlin.-any/this-to-string.html
$dokka.location:sliep.jes.serializer$toJson(kotlin.Array((sliep.jes.serializer.JesObject)))sliep.jes.serializer/kotlin.-array/to-json.html
$dokka.location:sliep.jes.serializer$toTypedArray(org.json.JSONArray)sliep.jes.serializer/org.json.-j-s-o-n-array/to-typed-array.html
$dokka.location:sliep.jes.serializer$toTypedArray(org.json.JSONArray, java.lang.Class((sliep.jes.serializer.toTypedArray.T)))sliep.jes.serializer/org.json.-j-s-o-n-array/to-typed-array.html
$dokka.location:sliep.jes.serializer$unwrappedClass#kotlin.reflect.KClass((kotlin.Any))sliep.jes.serializer/kotlin.reflect.-k-class/unwrapped-class.html
$dokka.location:sliep.jes.serializer$wrappedClass#kotlin.reflect.KClass((kotlin.Any))sliep.jes.serializer/kotlin.reflect.-k-class/wrapped-class.html
sliep.jes.serializer
